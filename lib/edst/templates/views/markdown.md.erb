<% render_header = lambda do |value, depth = 0| %>
<%   return unless EDST::Util.is_present?(value) %>
<%=  ("#" * (depth + 1)) << " " << value %>
<% end %>
<% render_tag = lambda do |node, depth = 0| %>
<%   tag_name = node.key %>
<%   if tag_name.start_with?('&') %>
<%     case tag_name[1...tag_name.length] %>
<%     when /image(?:#(\S+))?/ %>
<%       ref = $1 || '' %>
<%       fn = node.value %>
<%       bsn = File.basename(fn) %>
<%       ex = "images/#{bsn}" %>
<%       asset = [fn, ex] %>
<%       asset_exports << asset %>
[![<%= ref %>](<%= ex %>)](<%= ex %>) <%= EDST::Util.titlecase(ref) %>
<%     else %>
<%       alert.fixme node.kind, node.key, node.value %>
<%     end %>
<%   else %>
<%     if node.value %>
| <%= node.key %> | <%= node.value %> |
<%     else %>
<% render_header.call(node.key, depth) %>
<%     end %>
<%   end %>
<% end %>
<% render_document = lambda do |tre, depth = 0| %>
<%   tre.each_child do |node| %>
<%     case node.kind %>
<%     when :dialogue_group %>
<%       render_document.call(node, depth.succ) %>

<%     when :dialogue %>
`<%= node.key %>`
```<%= node.value %>```

<%     when :ln %>
* <%= node.value %>
<%     when :list %>
<% render_document.call(node, depth.succ) %>

<%     when :header %>
<% render_header.call(node.value, depth) %>

<%     when :label %>
_<%= node.value %>_
<%     when :split %>


<%     when :comment %>
`<%= node.value %>`
<%     when :tag %>
<%       render_tag.call(node, depth) %>
<%     when :div %>
<% render_header.call(node.key, depth) %>
<% render_document.call(node, depth.succ) %>

<%     when :p %>
<%= node.value %>

<%     else %>
      <% alert.fixme node.kind, node.key, node.value %>
<%     end %>
<%   end %>
<% end %>
<% render_document.call(document) %>
