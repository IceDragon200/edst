<% render_tag = lambda do |node, node_ctx, d = 0| %>
  <% tag_name = node.key %> %>
  <% if tag_name.start_with?('&') %>
    <% case tag_name[1...tag_name.length] %>
    <% when /image(?:#(\S+))?/ %>
      <% ref = $1 || '' %>
      <% fn = node.value %>
      <% bsn = File.basename(fn) %>
      <% ex = "images/#{bsn}" %>
      <% asset = [fn, ex] %>
      <% asset_exports << asset %>
      <% (node_ctx.refs ||= {})[ref] = asset if ref.present? %>
      a.image-ref id="#{ref}" href="./#{ex}"
        .image-title
          <% if ref.present? %>
            span <%= ref %>
          <% end %>
          span.filename.comment <%= bsn %>
        .image-content
          img src="./#{ex}"
    <% else %>
      <% alert.fixme node.kind, node.key, node.value %>
      div class="fixme meta #{node.kind}"
        p.comment <%= "FIXME: #{node.kind} #{tag_name}" %>
        dl
          dt = node.key
          dd = node.value
    <% end %>
  <% else %>
    <% tag_id = "tag-#{tag_name.downcase}" %>
    dl class="tag #{tag_id}"
      dt class="#{tag_id}" <%= tag_name.titlecase %>
      dd class="#{tag_id}" <%= node.value %>
  <% end %>
<% end %>
<% render_header = lambda do |value, depth = 0| %>
  <% return unless value.present? %>
<%= ("#" * (depth + 1)) << " " << value %>
<% end %>
<% render_tree = lambda do |tre, depth = 0| %>
  <% tre.each_child do |node| %>
    <% case node.kind %>
    <% when :dialogue_group %>
<% render_tree.call(node, depth.succ) %>

    <% when :dialogue %>
`<%= node.key %>`
```<%= node.value %>```

    <% when :ln %>
* <%= node.value %>
    <% when :list %>
<% render_tree.call(node, depth.succ) %>

    <% when :header %>
<% render_header.call(node.value, depth) %>

    <% when :label %>
_<%= node.value %>_
    <% when :split %>


    <% when :comment %>
`<%= node.value %>`
    <% when :tag %>
<% if node.value %>
| <%= node.key %> | <%= node.value %> |
<% else %>
<% render_header.call(node.key, depth) %>
<% end %>
    <% when :div %>
<% render_header.call(node.key, depth) %>
<% render_tree.call(node, depth.succ) %>

    <% when :p %>
<%= node.value %>

    <% else %>
      <% alert.fixme node.kind, node.key, node.value %>
    <% end %>
  <% end %>
<% end %>
<% render_tree.call(tree) %>
