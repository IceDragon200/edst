#!/usr/bin/env ruby
require 'edst/cli/base_renderer'
require 'edst/cli/quick_html_renderer'
require 'edst/cli/markdown_renderer'
require 'edst/cli/text_renderer'
require 'ostruct'
require 'optparse'

options = OpenStruct.new(
  directory: Dir.getwd,
  render_engines: [],
  template: ENV['EDST_HTML_TEMPLATE'].presence
)

parser = OptionParser.new do |opts|
  opts.on '-r', '--render-engines NAME,...', Array, 'Rendering engines, defaults to html' do |v|
    options.render_engines.concat v
  end

  opts.on '-d', '--directory NAME', String, 'Output directory' do |v|
    options.directory = v
  end

  opts.on '-t', '--template NAME', String, 'Template file' do |v|
    options.template = v
  end
end

options.render_engines << 'html' unless options.render_engines.empty?
options.render_engines.uniq!

argv = parser.parse(ARGV)

renderers = options.render_engines.map do |re|
  if renderer = EDST::BaseRenderer[re]
    renderer
  else
    abort "Invalid render_engine #{re}"
    nil
  end
end
renderers.compact!
renderers.uniq!

renderers.each do |renderer|
  argv.each do |filename|
    renderer.render_file filename, options
  end
end
